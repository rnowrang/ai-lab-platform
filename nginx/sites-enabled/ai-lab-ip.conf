# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    return 301 https://$host$request_uri;
}

# Main HTTPS server
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    # SSL certificates
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    # Root directory
    root /usr/share/nginx/html;
    index index.html;

    # Main frontend
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Admin portal
    location /admin {
        auth_basic "Admin Area";
        auth_basic_user_file /etc/nginx/.htpasswd;
        try_files /admin.html =404;
    }

    # Backend API with rate limiting
    location /api/ {
        limit_req zone=api_limit burst=10 nodelay;
        
        proxy_pass http://backend/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts for long-running operations
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # MLflow UI
    location /mlflow/ {
        proxy_pass http://mlflow/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Required for MLflow artifact uploads
        client_max_body_size 5G;
        proxy_request_buffering off;
    }

    # Grafana dashboards - Simplified configuration
    location /grafana {
        return 301 /grafana/;
    }
    
    location /grafana/ {
        proxy_pass http://grafana;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Disable redirect handling to let Grafana handle it
        proxy_redirect off;
    }

    # Prometheus (public access)
    location /prometheus {
        return 301 /prometheus/;
    }
    
    location /prometheus/ {
        proxy_pass http://prometheus/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Model inference endpoint
    location /inference/ {
        limit_req zone=api_limit burst=50 nodelay;
        
        proxy_pass http://torchserve/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts for model inference
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Large payloads for model inputs
        client_max_body_size 100M;
    }

    # Health check endpoint (no auth required)
    location = /health {
        proxy_pass http://backend/api/health;
        access_log off;
    }
} 